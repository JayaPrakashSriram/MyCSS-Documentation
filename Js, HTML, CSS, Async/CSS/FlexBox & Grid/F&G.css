/* FlexBox and Grid used to creatr layouts. But both serves in different purposes and having different strength
     and weakness.
*/

.flexbox-container{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}
/* Initialy the content of the div shown in row or as column wise
   PROVIDING:
     Step1: display: flex; -> Now all the div as been shown in column or as row wise. Here every direct child will 
                                become a column When the entire container started get to squesed, they wil adjusted 
                                automatically till a point and then it will breaks out of the screen. Instead of 
                                breaking out of the screen it needs to arranged the excess content in new column 
                                automatically. 
                              The default value of the flex is row. If even specify that will do no change, which can
                                be see in step2.
     Step2: flex-direction: row; -> There is no changes. Now squesing them beyond a certain level will leads to over
                                      flow and the content in the flex as partially hided.
                                    In the step 1 & 2, it say that the class flex-container as to be shown as row 
                                      and it's element will be columned. In other words, the parent instructed to act
                                      as row, so that its direct child will act as columns.
    Step3: flex-wrap: wrap; -> It prevents the over flow by creating columns for div, the overflow will be prevented
                                 to a certain point.
*/

.grid-container{
    display:grid;
    /* grid-auto-flow:row; */
    /* grid-auto-flow:column; */
    /* grid-template-columns: 1fr lfr lfr 1fr 1fr; */
    grid-template-columns: repeat(5, 1fr);
}
/* Initialy the content of the div shown in row or column wise
   PROVIDING:
     Step1: display: grid; -> It will do nothing, content of the div will remains row or column wise.
     Step2: grid-auto-flow:row; -> There is no change. It is opposite to flex-direction:row; in display:flex; 
              property. Here in, grid-auto-flow:row; instructed the childs to stay in row.
     Step3: grid-auto-flow:column; -> Now all the div as been shown in column or as row wise. Now squesing them beyond
              a certain level will leads to over flow and the content in the grid as partially hided.
     Step4: remove or command Step2 -> grid-auto-flow:column;
     Step5: grid-template-columns: 1fr lfr lfr 1fr 1fr; -> Here specification of how many column will be displayed
                                                             as been done. Earlier it as been done by browser on its
                                                             own.
     Step6: grid-templte-columns: repeat(5, 1fr); -> Simplified version of Step4. Here columns will struck with 
                                                      the same no. of columns to a max level of squizing to certain 
                                                      level and remains same no. of columns for a exteded wide 
                                                      screen.
     Step7: grid-template-colmns: repet(auto-fit, minmax(300px, 1fr));
*/

/* After step2 of flex and step3 of grid, both flex and grid are showned in column or as row wise. But spacing between 
     div's is different but entire structure of grid and flex remains the same. Grid provides better spacing than 
     flex.
   After step2 of flex and step5 of grid, flex is more flexibile and grid is more structured.
*/

div:not([class]){
    outline: 2px solid black;
    padding: 0.5em;
}